AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  nanum_back

  모든 자취생을 위한 나눔장 프로젝트!
  항상 안전하게 테스트하기!

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        CoBuyingTableName: !Ref CoBuyingTableName
        REGIONNAME: !Ref REGIONNAME
        AWSENVNAME: !Ref AWSENVNAME
        DEVENVNAME: !Ref DEVENVNAME
        DYNAMODBURL: !Ref DYNAMODBURL
        DYNAMODBHOST: !Ref DYNAMODBHOST
        DYNAMODBPORT: !Ref DYNAMODBPORT
        PROTOCAL: !Ref PROTOCAL

Parameters:
  CoBuyingTableName:
    Type: String
    Description: 공구방 테이블을 위한 테이블
    Default: "CoBuyingTable"

  REGIONNAME:
    Type: String
    Description: Default region for deployment.
    Default: "ap-northeast-2"

  AWSENVNAME:
    Type: String
    Description: AWS Environment where code is being executed (AWS_SAM_LOCAL or AWS).
    Default: "AWS_SAM_LOCAL"

  DEVENVNAME:
    Type: String
    Description: Developer environment where code is being executed (OSX, Windows, or Linux).
    Default: "OSX"
  DYNAMODBURL:
    Type: String
    Description: 실행 환경에 따른 DynamoDB Endpoint
    Default: "https://dynamodb.ap-northeast-2.amazonaws.com"
  DYNAMODBHOST:
    Type: String
  DYNAMODBPORT:
    Type: String
  PROTOCAL:
    Type: String

Resources:
  CreateCoBuyingFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Description: 공구방 생성 함수
    Properties:
      CodeUri: event-func/cobuying
      Handler: post.createCoBuyingHandler
      Runtime: nodejs20.x
      MemorySize: 1024
      Timeout: 20
      Architectures:
        - x86_64
      Events: # API Gateway 이벤트 설정으로 암시적 생성 -> 자동 생성
        CreateCoBuying:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties: # 엔드포인트: POST /co-buying
            Path: /api/co-buying # API Gateway 경로
            Method: post # HTTP 메서드
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoBuyingTableName
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - post.ts

  GetCoBuyingByIdFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Description: 공구방 생성 함수
    Properties:
      CodeUri: event-func/cobuying
      Handler: get.getCoBuyingByIdHandler
      Runtime: nodejs20.x
      MemorySize: 1024
      Timeout: 20
      Architectures:
        - x86_64
      Events: # API Gateway 이벤트 설정으로 암시적 생성 -> 자동 생성
        CreateCoBuying:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties: # 엔드포인트: POST /co-buying
            Path: /api/co-buying/{createdAt}/{id} # API Gateway 경로
            Method: get # HTTP 메서드
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoBuyingTableName
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - get.ts

  CoBuyingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CoBuyingTable
      AttributeDefinitions:
        - AttributeName: coBuyingStatus
          AttributeType: N # 공구글 상태
        - AttributeName: createdAtId
          AttributeType: S # 공구글 생성일 + ID
        - AttributeName: deadlineId
          AttributeType: S # 마감일 + ID
        - AttributeName: ownerNameId
          AttributeType: S # 공구장 이름 + ID
        - AttributeName: ownerName
          AttributeType: S # 공구장 이름
      KeySchema:
        - AttributeName: coBuyingStatus
          KeyType: HASH # 파티션 키
        - AttributeName: createdAtId
          KeyType: RANGE # 정렬 키
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      LocalSecondaryIndexes:
        - IndexName: DeadlineIndex
          KeySchema:
            - AttributeName: coBuyingStatus
              KeyType: HASH # 파티션 키는 coBuyingStatus
            - AttributeName: deadlineId
              KeyType: RANGE # 정렬 키는 deadline#id
          Projection:
            ProjectionType: ALL # 인덱스에 모든 속성 포함
        - IndexName: OwnerNameIndex
          KeySchema:
            - AttributeName: coBuyingStatus
              KeyType: HASH # 파티션 키는 coBuyingStatus
            - AttributeName: ownerNameId
              KeyType: RANGE # 정렬 키는 ownerName#id
          Projection:
            ProjectionType: ALL # 인덱스에 모든 속성 포함
      GlobalSecondaryIndexes:
        - IndexName: OwnerNameGSI
          KeySchema:
            - AttributeName: ownerName
              KeyType: HASH # 파티션 키는 ownerName
            - AttributeName: createdAtId
              KeyType: RANGE # 정렬 키는 createdAt#id
          Projection:
            ProjectionType: ALL # 인덱스에 모든 속성 포함
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateCoBuyingApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/co-buying/"
  CreateCoBuyingFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt CreateCoBuyingFunction.Arn
  CreateCoBuyingFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt CreateCoBuyingFunctionRole.Arn
