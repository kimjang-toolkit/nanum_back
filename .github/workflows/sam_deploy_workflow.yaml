name: SAM Deploy Pipeline

on:
  pull_request: # Prod, Stg 브랜치에 병합될 때 실행
    branches: [Prod, Stg]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: GongGong99_sam_deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GIT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Install dependencies
        run: |
          npm install
          npm install -g esbuild  # esbuild 전역 설치
          npm install uuid @aws-sdk/lib-dynamodb @aws-sdk/client-dynamodb  # AWS SDK와 uuid 설치

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: SAM Build
        run: sam build --template ./nanum_back/template.yaml

      - name:
          SAM Validate
          # 프로젝트 root 위치에서 빌드하는게 아닌 ./nanum_back/template.yaml을 빌드
        run: sam validate --template ./nanum_back/template.yaml

      - name: Deploy
        run: | # changeset 생성 및 자동 승인하여 배포
          sam deploy \
            --template ./nanum_back/template.yaml \
            --config-env ${{ github.base_ref }} \
            --stack-name ${{ github.base_ref }}-nanum-back \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --capabilities CAPABILITY_IAM \
            --s3-bucket ${{ secrets.S3_BUCKET_NAME }}

      - name: Print Stack Outputs
        run: |
          # 스택 outputs 출력
          aws cloudformation describe-stacks \
            --stack-name ${{ github.base_ref }}-nanum-back \
            --query 'Stacks[0].Outputs' \
            --output table
